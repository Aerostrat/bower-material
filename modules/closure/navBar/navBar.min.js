/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.10-master-d343363
 */
function MdNavBar(n,o){return{restrict:"E",transclude:!0,controller:MdNavBarController,controllerAs:"ctrl",bindToController:!0,scope:{mdSelectedNavItem:"=?",mdNoInkBar:"=?",navBarAriaLabel:"@?"},template:'<div class="md-nav-bar"><nav role="navigation"><ul class="_md-nav-bar-list" ng-transclude role="tablist" tabindex="0" ng-focus="ctrl.onFocus()" ng-keydown="ctrl.onKeydown($event)" aria-label="{{ctrl.navBarAriaLabel}}"></ul></nav><md-nav-ink-bar ng-hide="ctrl.mdNoInkBar"></md-nav-ink-bar></div>',link:function(e,t,r,a){o(t),a.navBarAriaLabel||n.expectAsync(t,"aria-label",angular.noop)}}}function MdNavBarController(e,t,r,a){this._$timeout=r,this._$scope=t,this._$mdConstant=a,this.mdSelectedNavItem,this.navBarAriaLabel,this._navBarEl=e[0],this._inkbar;var n=this,o=this._$scope.$watch(function(){return n._navBarEl.querySelectorAll("._md-nav-button").length},function(e){0<e&&(n._initTabs(),o())})}function MdNavItem(c,e,u,m){return{restrict:"E",require:["mdNavItem","^mdNavBar"],controller:MdNavItemController,bindToController:!0,controllerAs:"ctrl",replace:!0,transclude:!0,template:function(e,t){var r,a,n=t.mdNavClick,o=t.mdNavHref,l=t.mdNavSref,i=t.srefOpts;if(1<(n?1:0)+(o?1:0)+(l?1:0))throw Error("Please do not specify more than one of the md-nav-click, md-nav-href, or md-nav-sref attributes per nav-item directive.");if(null!=n)r='ng-click="ctrl.mdNavClick()"';else if(null!=o)r='ng-href="{{ctrl.mdNavHref}}"';else{if(null==l)throw Error("Please specify at least one of the md-nav-click, md-nav-href, or md-nav-sref attributes per nav-item directive.");r='ui-sref="{{ctrl.mdNavSref}}"'}return r&&(a='<md-button class="_md-nav-button md-accent" ng-class="ctrl.getNgClassMap()" ng-blur="ctrl.setFocused(false)" ng-disabled="ctrl.disabled" tabindex="-1" role="tab" ng-attr-aria-label="{{ctrl.navItemAriaLabel ? ctrl.navItemAriaLabel : undefined}}" aria-selected="{{ctrl.isSelected()}}" '+(i?'ui-sref-opts="{{ctrl.srefOpts}}" ':"")+r+'><span ng-transclude class="_md-nav-button-text"></span></md-button>'),'<li class="md-nav-item" role="presentation">'+(a||"")+"</li>"},scope:{mdNavClick:"&?",mdNavHref:"@?",mdNavSref:"@?",srefOpts:"=?",name:"@",navItemAriaLabel:"@?"},link:function(o,l,i,s){var d;e(function(){var t=s[0],e=s[1],r=angular.element(l[0].querySelector("._md-nav-button"));if(t.name||(t.name=angular.element(l[0].querySelector("._md-nav-button-text")).text().trim()),r.on("click",function(){e.mdSelectedNavItem=t.name,o.$apply()}),t.disabled=u.parseAttributeBoolean(i.disabled,!1),"MutationObserver"in m){var a=l[0],n=new MutationObserver(function(e){u.nextTick(function(){t.disabled=u.parseAttributeBoolean(i[e[0].attributeName],!1)})});n.observe(a,{attributes:!0,attributeFilter:["disabled"]}),d=n.disconnect.bind(n)}else i.$observe("disabled",function(e){t.disabled=u.parseAttributeBoolean(e,!1)});t.navItemAriaLabel||c.expectWithText(r,"aria-label")}),o.$on("destroy",function(){d()})}}}function MdNavItemController(e){this._$element=e,this.mdNavClick,this.mdNavHref,this.mdNavSref,this.srefOpts,this.name,this.navItemAriaLabel,this._selected=!1,this._focused=!1}goog.provide("ngmaterial.components.navBar"),goog.require("ngmaterial.core"),MdNavBarController.$inject=["$element","$scope","$timeout","$mdConstant"],MdNavItem.$inject=["$mdAria","$$rAF","$mdUtil","$window"],MdNavItemController.$inject=["$element"],MdNavBar.$inject=["$mdAria","$mdTheming"],angular.module("material.components.navBar",["material.core"]).controller("MdNavBarController",MdNavBarController).directive("mdNavBar",MdNavBar).controller("MdNavItemController",MdNavItemController).directive("mdNavItem",MdNavItem),MdNavBarController.prototype._initTabs=function(){this._inkbar=angular.element(this._navBarEl.querySelector("md-nav-ink-bar"));var r=this;this._$timeout(function(){r._updateTabs(r.mdSelectedNavItem,void 0)}),this._$scope.$watch("ctrl.mdSelectedNavItem",function(e,t){r._$timeout(function(){r._updateTabs(e,t)})})},MdNavBarController.prototype._updateTabs=function(e,t){var r=this,a=this._getTabs();if(a){var n=-1,o=-1,l=this._getTabByName(e),i=this._getTabByName(t);i&&(i.setSelected(!1),n=a.indexOf(i)),l&&(l.setSelected(!0),o=a.indexOf(l)),this._$timeout(function(){r._updateInkBarStyles(l,o,n)})}},MdNavBarController.prototype._updateInkBarStyles=function(e,t,r){if(this._inkbar.toggleClass("_md-left",t<r).toggleClass("_md-right",r<t),this._inkbar.css({display:t<0?"none":""}),e){var a=e.getButtonEl(),n=a.offsetLeft;this._inkbar.css({left:n+"px",width:a.offsetWidth+"px"})}},MdNavBarController.prototype._getTabs=function(){var e=Array.prototype.slice.call(this._navBarEl.querySelectorAll(".md-nav-item")).map(function(e){return angular.element(e).controller("mdNavItem")});return e.indexOf(void 0)?e:null},MdNavBarController.prototype._getTabByName=function(t){return this._findTab(function(e){return e.getName()===t})},MdNavBarController.prototype._getSelectedTab=function(){return this._findTab(function(e){return e.isSelected()})},MdNavBarController.prototype.getFocusedTab=function(){return this._findTab(function(e){return e.hasFocus()})},MdNavBarController.prototype._findTab=function(e){for(var t=this._getTabs(),r=0;r<t.length;r++)if(e(t[r]))return t[r];return null},MdNavBarController.prototype.onFocus=function(){var e=this._getSelectedTab();e&&e.setFocused(!0)},MdNavBarController.prototype._moveFocus=function(e,t){e.setFocused(!1),t.setFocused(!0)},MdNavBarController.prototype.onKeydown=function(e){var t=this._$mdConstant.KEY_CODE,r=this._getTabs(),a=this.getFocusedTab();if(a){var n=r.indexOf(a);switch(e.keyCode){case t.UP_ARROW:case t.LEFT_ARROW:0<n&&this._moveFocus(a,r[n-1]);break;case t.DOWN_ARROW:case t.RIGHT_ARROW:n<r.length-1&&this._moveFocus(a,r[n+1]);break;case t.SPACE:case t.ENTER:this._$timeout(function(){a.getButtonEl().click()})}}},MdNavItemController.prototype.getNgClassMap=function(){return{"md-active":this._selected,"md-primary":this._selected,"md-unselected":!this._selected,"md-focused":this._focused}},MdNavItemController.prototype.getName=function(){return this.name},MdNavItemController.prototype.getButtonEl=function(){return this._$element[0].querySelector("._md-nav-button")},MdNavItemController.prototype.setSelected=function(e){this._selected=e},MdNavItemController.prototype.isSelected=function(){return this._selected},MdNavItemController.prototype.setFocused=function(e){(this._focused=e)&&this.getButtonEl().focus()},MdNavItemController.prototype.hasFocus=function(){return this._focused},ngmaterial.components.navBar=angular.module("material.components.navBar");